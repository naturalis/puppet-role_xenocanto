#!/bin/bash
#
# check SSL certificate expiredate and manage letsencrypt renewal
#
# author: hugo.vanduijn@naturalis.nl
#

cert_file=<%= @cert_file %>
cert_name=<%= @cert_name %>
cert_warning_days=<%= @cert_warning_days %>
cert_critical_days=<%= @cert_critical_days %>
cert_renew_days=<%= @cert_renew_days %>

# if running as sensu user then read date from /tmp/cert_name.days, if not then create the /tmp/cert_name.days file
if [ "$1" == "sensu" ]; then
  date=$(cat /tmp/$cert_name.days)
else
  date=$(openssl x509 -in $cert_file -enddate -noout | sed "s/.*=\(.*\)/\1/") 
  echo $date > /tmp/$cert_name.days
fi
date_s=$(date -d "${date}" +%s)
now_s=$(date -d now +%s)
date_diff=$(( (date_s - now_s) / 86400 ))


# make sure text renew is in output, puppet makes use of that. 
if [ "$cert_renew_days" -gt "$date_diff" ]; then
  echo "Renewal status: $cert_name due for renewal $date_diff days left"
fi

if [ "$cert_critical_days" -gt "$date_diff" ]; then
  echo "Critical: $cert_name almost expired $date_diff days left"
  exit 2
fi

if [ "$cert_warning_days" -gt "$date_diff" ]; then
  echo "Warning: $cert_name almost expired $date_diff days left"
  exit 1
fi

echo "Ok: $cert_name expires in $date_diff days."
exit 0
